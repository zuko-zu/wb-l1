/**
 * Функция, создающая замыкание для управления счетчиком.
 *
 * @returns {function} Функция-замыкание для инкрементирования счетчика.
 */

// Функция counter создает замыкание, внутри которого определена приватная переменная count, которая начинается с нуля.
function counter() {
  // Приватная переменная внутри замыкания.
  let count = 0;

  /**
   * Функция-замыкание, которая инкрементирует счетчик и возвращает его значение.
   *
   * @returns {number} Текущее значение счетчика.
   */

  return function () {
    return ++count;
  };
}

// Создаем экземпляр замыкания для счетчика.
const increment = counter();
// После создания экземпляра замыкания, мы можем вызывать increment() для инкрементирования счетчика.
// Замыкание сохраняет состояние переменной count между вызовами, даже после завершения выполнения внешней функции counter.
// Так работают замыкания: сохраняют доступ к переменным из внешней области видимости, которые были доступны после завершения выполнения внешней функции.

// Используем замыкание для инкрементирования счетчика.
console.log(increment()); // Выведет: 1
console.log(increment()); // Выведет: 2
console.log(increment()); // Выведет: 3
