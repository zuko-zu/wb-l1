/**
 * Функция для сортировки массива объектов по возрастанию возраста
 * и по алфавиту по полю name при равных возрастах.
 *
 * @param {Array} arr - Массив объектов для сортировки.
 * @returns {Array} - Отсортированный массив объектов.
 */

function sortObjects(arr) {
  // Проверяем, что входной аргумент является массивом
  if (!Array.isArray(arr)) {
    // Иначе выкидываем ошибку
    throw new Error('Входной аргумент должен быть массивом');
  }

  arr.sort((a, b) => {
    // Методу .sort() передаем функцию, которая принимает два аргумента a и b.
    // Эта функция будет вызываться для сравнения каждой пары элементов массива
    if (a.age !== b.age) {
      // Сначала проверяется, равен ли возраст объекта a возрасту объекта b. Если они не равны, то возвращается разница a.age - b.age.
      // Это отрицательное число, если возраст a меньше, и положительное, если возраст a больше. Таким образом получаем сортировку по возрастанию возраста
      return a.age - b.age;
    } else {
      // Если возраст a и b равны, мы сравниваем по полю name.
      // Мы используем метод localeCompare() для определения того, какая из строк, a.name или b.name, идет первой в алфавитном порядке.
      // Если a.name идет первой, метод вернет отрицательное число, если b.name идет первой - положительное число, и если строки идентичны - вернет 0.
      return a.name.localeCompare(b.name);
    }
  });
  // Возвращаем результатирующий массив (метод .sort() возвращает новый массив )
  return arr;
}

// Пример использования
const data = [
  { name: 'John', age: 25 },
  { name: 'Alice', age: 30 },
  { name: 'Bob', age: 25 },
];

console.log(sortObjects(data));
