// В задании требовалось упаковать функцию в модуль.
// Так как не стояла задача запускать код в браузере, использовала расширение .mjs для модулей ES6.
// Расширение .mjs четко указывает, что файл является модудулем ES6.
// Этот способ подходит для среды выполнения Node.js.

// Однако, этот способ не подходит для браузерной среды.
// Чтобы сделать этот код совместимым с браузером:
//   1. используем стандратные инструкции import/export и сохраняем файл с расширением .js.
//   2. В HTML-файл добавляем скрипт с типом модуль:
//      <script type="module" src="./index.js"></script>

import { changeWordEnding } from './changeWordEnding.mjs';

// Примеры использования

console.log(changeWordEnding(12, ['сообщение', 'сообщения', 'сообщений'])); // 12 сообщений
console.log(changeWordEnding(12, ['пользователь', 'пользователя', 'пользователей'])); // 12 пользователей

console.log(changeWordEnding(1, ['сообщение', 'сообщения', 'сообщений'])); // 12 сообщений
console.log(changeWordEnding(1, ['пользователь', 'пользователя', 'пользователей'])); // 12 пользователей

console.log(changeWordEnding(112, ['сообщение', 'сообщения', 'сообщений'])); // 12 сообщений
console.log(changeWordEnding(112, ['пользователь', 'пользователя', 'пользователей'])); // 12 пользователей

console.log(changeWordEnding(0, ['сообщение', 'сообщения', 'сообщений'])); // 12 сообщений
console.log(changeWordEnding(0, ['пользователь', 'пользователя', 'пользователей'])); // 12 пользователей

console.log(changeWordEnding(3, ['сообщение', 'сообщения', 'сообщений'])); // 12 сообщений
console.log(changeWordEnding(3, ['пользователь', 'пользователя', 'пользователей'])); // 12 пользователей
